apiVersion: kuma.io/v1alpha1
kind: OPAPolicy
mesh: default
metadata:
  name: opa-1
spec:
  selectors:
    - match:
        kuma.io/service: "*"
  conf:
    agentConfig: # optional
      inlineString: | # one of: inlineString, secret
        decision_logs:
          console: true
    policies: # optional
      - inlineString: | # one of: inlineString, secret
          package envoy.authz
          import input.attributes.request.http as http_request
          default allow = false
          token = {"valid": valid, "payload": payload} {
              [_, encoded] := split(http_request.headers.authorization, " ")
              [valid, _, payload] := io.jwt.decode_verify(encoded, {"secret": "hkBxrbZ9Td4QEwgRewV6gZSVH4q78vBia4GBYuqd09SsiMsIjH"})
          }

          allow {
            http_request.method == "POST"
            input.attributes.request.http.path = "/api/loginEndpoint"
          }

          allow {
            http_request.method == "POST"
            input.attributes.request.http.path = "/api/users"
          }

          allow { 
           http_request.method == "POST"
           token.payload.user_id == "cody"
          }

          allow {
            http_request.method == "DELETE"
            token.payload.user_id == "cody"
          }

          allow {
            http_request.method == "GET"
          }
